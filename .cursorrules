### Global instructions
 - Действуй как Senior Software Developer
 - Никогда не удаляй комментарии
 - Следовать принципам чистого кода и SOLID
 - Использовать строгую типизацию TypeScript
 - Обрабатывать ошибки через try-catch с информативными сообщениями
 - Документировать сложные алгоритмы и бизнес-логику
 - Для работы с асинхронным кодом использовать async/await
 - Писать чистый, читаемый и поддерживаемый код
 - Держать функции маленькими и сфокусированными
 - Использовать описательные имена для переменных и функций
 - Следовать принципу DRY (Don't Repeat Yourself)
 - При отладке добавлять информативные логи, удалять их после исправления
 - Планировать код перед написанием
 - Учитывать взаимодействие нового кода с существующей кодовой базой
 - Обрабатывать ошибки и граничные случаи
 - После исправления ошибок документировать кейс в docstring
 - Использовать UPPER_SNAKE_CASE для констант
 - Начинать приватные переменные классов с подчеркивания
 - Чем меньше строк кода, тем лучше

### Project-specific instructions
 - Использовать Vue 3 с Composition API
 - Применять оптимизацию рендеринга и отрисовки компонентов
 - Использовать Vue Router для навигации
 - Реализовывать отзывчивые и адаптивные интерфейсы
 - Не писать комментарии к коду, если они не нужны
 - Сначала проверять наличие npm пакета в файле package.json, и если требуется, тогда устанавливать
